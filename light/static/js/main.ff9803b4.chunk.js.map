{"version":3,"sources":["Timeline.js","Grid.js","Herotext.js","App.js","serviceWorker.js","index.js","wplogo.png"],"names":["useStyles","makeStyles","theme","paper","padding","secondaryTail","backgroundColor","palette","primary","CustomizedTimeline","classes","Timeline","align","TimelineItem","TimelineSeparator","TimelineDot","color","variant","TimelineConnector","TimelineContent","Paper","elevation","className","Typography","component","heroButtons","marginTop","spacing","cardGrid","paddingTop","paddingBottom","typeography","CustomziedGrid","Grid","container","justify","alignItems","item","Button","paragraph","th","createMuiTheme","type","styles","fade","animation","animationName","Radium","keyframes","fadeIn","Web","ThemeProvider","Fragment","CssBaseline","Container","maxWidth","style","class","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.ff9803b4.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\",\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.primary,\n  },\n}));\n\nexport default function CustomizedTimeline() {\n  const classes = useStyles();\n\n  return (\n    <Timeline align=\"alternate\">\n      <TimelineItem>\n        <TimelineSeparator>\n          <TimelineDot color=\"primary\" variant=\"outlined\">\n            <CodeIcon />\n          </TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Build\n            </Typography>\n          </Paper>\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineSeparator>\n          <TimelineDot color=\"primary\" variant=\"outlined\">\n            <AppsIcon />\n          </TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Deploy\n            </Typography>\n          </Paper>\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineSeparator>\n          <TimelineDot color=\"primary\" variant=\"outlined\">\n            <ShareIcon />\n          </TimelineDot>\n          <TimelineConnector className={classes.secondaryTail} />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Release\n            </Typography>\n          </Paper>\n        </TimelineContent>\n      </TimelineItem>\n    </Timeline>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(),\n  },\n  typeography: {\n    align: \"center\",\n  },\n}));\n\nexport default function CustomziedGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.heroButtons}>\n      <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Button variant=\"contained\">WaypointProject.io</Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"outlined\">Waypoint GitHub Repo</Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(),\n  },\n  typeography: {\n    align: \"center\",\n  },\n}));\n\nexport default function CustomziedGrid() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n        Waypoint allows developers to define their application build, deploy,\n        and release lifecycle as code, establishing a consistent, repeatable\n        workflow and reducing time to deliver applications\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Timeline from \"./Timeline\";\nimport Grid from \"./Grid\";\nimport Herotext from \"./Herotext\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { fadeIn } from \"react-animations\";\nimport Radium, { StyleRoot } from \"radium\";\nimport logo from \"./wplogo.png\";\nimport \"./App.css\";\n\nconst th = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\nconst useStyles = makeStyles((theme) => ({\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  typeography: {\n    align: \"center\",\n  },\n}));\nconst styles = {\n  fade: {\n    animation: \"x 2s\",\n    animationName: Radium.keyframes(fadeIn, \"fade\"),\n  },\n};\n\nexport default function Web() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={th}>\n      <React.Fragment>\n        <CssBaseline />\n        <main>\n          <div>\n            <Container maxWidth=\"sm\">\n              <StyleRoot>\n                <div style={styles.fade}>\n                  <img class=\"wpimage\" src={logo} alt=\"waypoint\" />\n                </div>\n              </StyleRoot>\n              <Herotext />\n              <Grid />\n            </Container>\n          </div>\n          <Container maxWidth=\"md\">\n            <Timeline />\n          </Container>\n        </main>\n      </React.Fragment>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"fontsource-roboto\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wplogo.e0db6a21.png\";"],"sourceRoot":""}